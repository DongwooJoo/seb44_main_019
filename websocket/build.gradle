plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.shellwe'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}


dependencies {
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.google.code.gson:gson'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'
}

tasks.named('test') {
	exclude '**/*'
}
// ec2에서 빌드시 asciidoc 및 테스트시 에러발생 후 빌드 실패로 임시 비활성화
//tasks.named('test') {
//	outputs.dir snippetsDir
//	useJUnitPlatform()
//}

//tasks.named('asciidoctor') {
//	configurations "asciidoctorExtensions"
//	inputs.dir snippetsDir
//	dependsOn test
//}

//task copyDocument(type: Copy) {
//	dependsOn asciidoctor
//	from file("${asciidoctor.outputDir}")
//	into file("src/main/resources/static/docs")
//}

//build {
//	dependsOn copyDocument
//}

//bootJar {
//	dependsOn copyDocument
//	from ("${asciidoctor.outputDir}") {
//		into 'static/docs'
//	}
//}